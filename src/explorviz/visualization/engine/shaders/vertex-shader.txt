precision mediump float;

attribute vec3 vertexPosition;
attribute vec2 texPosition;
attribute vec4 vertexColor;
attribute vec3 vertexNormal;
//attribute vec3 newVertexPosition;

//uniform float timePassedInPercent; // 0 to 1; 0 for no animation
uniform float useLighting;
uniform mat4 normalMatrix;
uniform mat4 modelViewMatrix;
uniform mat4 perspectiveMatrix;

varying mediump vec2 vTextureCoord;
varying lowp vec4 vColor;
varying lowp vec4 vLighting;

void main(void)
{
//  mediump vec3 newLocalPosition = vertexPosition + (timePassedInPercent * (newVertexPosition - vertexPosition));
  
//  gl_Position = perspectiveMatrix * modelViewMatrix * vec4(newLocalPosition, 1.0);
  gl_Position = perspectiveMatrix * modelViewMatrix * vec4(vertexPosition, 1.0);
  vTextureCoord = texPosition;
  vColor = vertexColor;
  
  lowp vec3 ambientLight = vec3(0.65, 0.65, 0.65);
  lowp vec3 directionalLightColor = vec3(0.35, 0.35, 0.35);
  lowp vec3 directionalVector = vec3(0.85, 0.8, 0.75);
     
  lowp vec4 transformedNormal = normalMatrix * vec4(vertexNormal, 1.0);
  
  lowp float directional = max(dot(transformedNormal.xyz, directionalVector), 0.0);
  vLighting = vec4(useLighting * (ambientLight + (directionalLightColor * directional)), 1.0) + (1.0 - useLighting) * vec4(1.0,1.0,1.0,1.0);
}