/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

import java.util.*;
import org.ofbiz.base.util.*;
import org.ofbiz.shark.container.*;
import org.enhydra.shark.api.client.wfservice.*;
import org.apache.commons.fileupload.*;

admin = SharkContainer.getAdminInterface();
repMgr = SharkContainer.getRepositoryMgr();
pkgMgr = admin.getPackageAdministration();

pkgMgr.clearXPDLCache();
String[] foo = pkgMgr.getOpenedPackageIds();
if (foo != null) {
    for (int i = 0; i < foo.length; i++) {
        Debug.log("Open Package : " + foo[i] + " - " + pkgMgr.isPackageOpened(foo[i]));
    }
}


// open package
if (request.getParameter("open") != null) {
    packageData = request.getParameter("open");
    try {
        pkgMgr.openPackage(packageData);
    } catch (Exception e) {
        request.setAttribute("_ERROR_MESSAGE_", e.getMessage());
    }
}

// close package
if (request.getParameter("close") != null) {
    packageId = request.getParameter("close");
    version = request.getParameter("version");
    try {
        pkgMgr.closePackage(packageId, version);
        pkgMgr.clearXPDLCache();
    } catch (Exception e) {
        request.setAttribute("_ERROR_MESSAGE_", e.getMessage());
    }
}

// delete package
if (request.getParameter("delete") != null) {
    deleteXpdl = request.getParameter("delete");
    if (pkgMgr.isPackageOpened(deleteXpdl)) {
        request.setAttribute("_ERROR_MESSAGE_", "Cannot remove an opened package; close the package first!");
    } else {
        try {
            repMgr.deletePackage(deleteXpdl);
        } catch (Exception e) {
            request.setAttribute("_ERROR_MESSAGE_", e.getMessage());
        }
    }
}

// upload package
if (request.getParameter("upload") != null) {
    try {
        fu = new DiskFileUpload();
        lst = fu.parseRequest(request);
        if (lst.size() > 0) {
            fui = lst.iterator();
            while (fui.hasNext()) {
                DefaultFileItem fi = fui.next();
                //String name = SharkContainer.getFileName(fi.getName());
                repMgr.uploadPackage(fi.get(), fi.getName());
                packageId = repMgr.getPackageId(fi.getName());
                pkgMgr.openPackage(fi.getName());
                fi.delete();
            }
        }
    } catch (Exception e) {
        request.setAttribute("_ERROR_MESSAGE_", e.getMessage());
    }
}

// get package list
paths = repMgr.getPackagePaths();

context.put("repMgr", repMgr);
context.put("pkgMgr", pkgMgr);
context.put("packages", Arrays.asList(paths));
