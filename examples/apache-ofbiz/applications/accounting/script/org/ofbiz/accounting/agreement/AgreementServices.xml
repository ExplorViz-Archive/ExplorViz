<?xml version="1.0" encoding="UTF-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->

<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="http://ofbiz.apache.org/dtds/simple-methods-v2.xsd">

    <!-- ================================================================ -->
    <!-- Agreement Services -->
    <!-- ================================================================ -->

    <!-- create a new Agreement -->
    <simple-method method-name="createAgreement" short-description="Create an Agreement">
        <!-- create new entity and create all the fields -->
        <make-value value-field="newEntity" entity-name="Agreement"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>

        <!-- create a non existing ID -->
        <sequenced-id sequence-name="Agreement" field="agreementId"/>
        <set from-field="agreementId" field="newEntity.agreementId"/>
        <field-to-result field="agreementId" result-name="agreementId"/>

        <if-empty field="newEntity.fromDate">
            <now-timestamp field="nowTimestamp"/>
            <set from-field="nowTimestamp" field="newEntity.fromDate"/>
        </if-empty>

        <!-- finally create the record (should not exist already)-->
        <create-value value-field="newEntity"/>
        <check-errors/>
    </simple-method>

    <!-- update an existing Agreement -->
    <simple-method method-name="updateAgreement" short-description="Update an existing Agreement">
        <entity-one entity-name="Agreement" value-field="agreement" auto-field-map="true"/>
        <check-errors/>
        <set-nonpk-fields map="parameters" value-field="agreement"/>
        <store-value value-field="agreement"/>
        <check-errors/>
    </simple-method>

    <!-- cancel an existing Agreement -->
    <simple-method method-name="cancelAgreement" short-description="Cancel an existing Agreement">
        <entity-one entity-name="Agreement" value-field="agreement" auto-field-map="true"/>
        <check-errors/>
        <now-timestamp field="nowTimestamp"/>
        <set from-field="nowTimestamp" field="agreement.thruDate"/>
        <store-value value-field="agreement"/>
        <check-errors/>
    </simple-method>

    <!-- copy an existing Agreement -->
    <simple-method method-name="copyAgreement" short-description="Copy an existing Agreement">
        <entity-one entity-name="Agreement" value-field="agreement" auto-field-map="true"/>
        <check-errors/>
        <set-service-fields service-name="createAgreement" to-map="createAgreementInMap" map="agreement"/>
        <call-service service-name="createAgreement" in-map-name="createAgreementInMap">
            <result-to-field result-name="agreementId" field="agreementIdTo"/>
        </call-service>

        <get-related value-field="agreement" relation-name="AgreementItem" list="agreementItems"/>
        <iterate list="agreementItems" entry="agreementItem">
            <clear-field field="createAgreementItemInMap"/>
            <set-service-fields service-name="createAgreementItem" to-map="createAgreementItemInMap" map="agreementItem"/>
            <set from-field="agreementIdTo" field="createAgreementItemInMap.agreementId"/>
            <call-service service-name="createAgreementItem" in-map-name="createAgreementItemInMap"/>
        </iterate>
        <if-compare field="parameters.copyAgreementTerms" value="Y" operator="equals">
            <get-related value-field="agreement" relation-name="AgreementTerm" list="agreementTerms"/>
            <iterate list="agreementTerms" entry="agreementTerm">
                <clear-field field="createAgreementTermInMap"/>
                <set-service-fields service-name="createAgreementTerm" to-map="createAgreementTermInMap" map="agreementTerm"/>
                <set from-field="agreementIdTo" field="createAgreementTermInMap.agreementId"/>
                <call-service service-name="createAgreementTerm" in-map-name="createAgreementTermInMap"/>
            </iterate>
        </if-compare>
        <if-compare field="parameters.copyAgreementProducts" value="Y" operator="equals">
            <get-related value-field="agreement" relation-name="AgreementProductAppl" list="agreementProductAppls"/>
            <iterate list="agreementProductAppls" entry="agreementProductAppl">
                <clear-field field="createAgreementProductApplInMap"/>
                <set-service-fields service-name="createAgreementProductAppl" to-map="createAgreementProductApplInMap" map="agreementProductAppl"/>
                <set from-field="agreementIdTo" field="createAgreementProductApplInMap.agreementId"/>
                <call-service service-name="createAgreementProductAppl" in-map-name="createAgreementProductApplInMap"/>
            </iterate>
        </if-compare>
        <if-compare field="parameters.copyAgreementParties" value="Y" operator="equals">
            <get-related value-field="agreement" relation-name="AgreementPartyApplic" list="agreementPartyApplic"/>
            <iterate list="agreementPartyApplics" entry="agreementPartyApplic">
                <clear-field field="createAgreementPartyApplicInMap"/>
                <set-service-fields service-name="createAgreementPartyApplic" to-map="createAgreementPartyApplicInMap" map="agreementPartyApplic"/>
                <set from-field="agreementIdTo" field="createAgreementPartyApplicInMap.agreementId"/>
                <call-service service-name="createAgreementPartyApplic" in-map-name="createAgreementPartyApplicInMap"/>
            </iterate>
        </if-compare>
        <field-to-result field="agreementIdTo" result-name="agreementId"/>
    </simple-method>

    <!-- create a new AgreementItem -->
    <simple-method method-name="createAgreementItem" short-description="Create an AgreementItem">
        <!-- create new entity and create all the fields -->
        <make-value value-field="newEntity" entity-name="AgreementItem"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>

        <set from-field="parameters.agreementId" field="newEntity.agreementId"/>
        <!-- create a non existing ID -->
        <if-empty field="parameters.agreementItemSeqId">
            <make-next-seq-id value-field="newEntity" seq-field-name="agreementItemSeqId"/>
            <set from-field="agreementItemSeqId" field="newEntity.agreementItemSeqId"/>
        <else>
            <set from-field="parameters.agreementItemSeqId" field="newEntity.agreementItemSeqId"/>
        </else>
        </if-empty>
        <field-to-result field="newEntity.agreementId" result-name="agreementId"/>
        <field-to-result field="newEntity.agreementItemSeqId" result-name="agreementItemSeqId"/>

        <!-- finally create the record (should not exist already)-->
        <create-value value-field="newEntity"/>
        <check-errors/>
    </simple-method>

    <!-- update an existing AgreementItem -->
    <simple-method method-name="updateAgreementItem" short-description="Update an existing AgreementItem">
        <entity-one entity-name="AgreementItem" value-field="agreementItem" auto-field-map="true"/>
        <check-errors/>
        <set-nonpk-fields map="parameters" value-field="agreementItem"/>
        <store-value value-field="agreementItem"/>
        <check-errors/>
    </simple-method>

    <!-- remove an AgreementItem -->
    <simple-method method-name="removeAgreementItem" short-description="Remove an AgreementItem">
        <entity-one entity-name="AgreementItem" value-field="agreementItem" auto-field-map="true"/>
        <check-errors/>
        <remove-value value-field="agreementItem"/>
    </simple-method>

    <!-- create a new AgreementTerm -->
    <simple-method method-name="createAgreementTerm" short-description="Create an AgreementTerm">
        <!-- create new entity and create all the fields -->
        <make-value value-field="newEntity" entity-name="AgreementTerm"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>

        <!-- create a non existing ID -->
        <sequenced-id sequence-name="AgreementTerm" field="agreementTermId"/>
        <set from-field="parameters.agreementId" field="newEntity.agreementId"/>
        <set from-field="parameters.agreementItemSeqId" field="newEntity.agreementItemSeqId"/>
        <set from-field="agreementTermId" field="newEntity.agreementTermId"/>
        <field-to-result field="agreementTermId" result-name="agreementTermId"/>

        <!-- finally create the record (should not exist already)-->
        <create-value value-field="newEntity"/>
        <check-errors/>
    </simple-method>

    <!-- update an existing AgreementTerm -->
    <simple-method method-name="updateAgreementTerm" short-description="Update an existing AgreementTerm">
        <entity-one entity-name="AgreementTerm" value-field="agreementTerm" auto-field-map="true"/>
        <check-errors/>
        <set-nonpk-fields map="parameters" value-field="agreementTerm"/>
        <store-value value-field="agreementTerm"/>
        <check-errors/>
    </simple-method>

    <!-- delete an existing AgreementTerm -->
    <simple-method method-name="deleteAgreementTerm" short-description="Delete an existing AgreementTerm">
        <entity-one entity-name="AgreementTerm" value-field="agreementTerm" auto-field-map="true"/>
        <check-errors/>
        <remove-value value-field="agreementTerm"/>
        <check-errors/>
    </simple-method>

    <!-- create a new AgreementPromoAppl -->
    <simple-method method-name="createAgreementPromoAppl" short-description="Create an AgreementPromoAppl">
        <make-value value-field="newEntity" entity-name="AgreementPromoAppl"/>
        <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <create-value value-field="newEntity"/>
        <check-errors/>
    </simple-method>

    <!-- update an existing AgreementPromoAppl -->
    <simple-method method-name="updateAgreementPromoAppl" short-description="Update an existing AgreementPromoAppl">
        <entity-one entity-name="AgreementPromoAppl" value-field="agreementPromoAppl" auto-field-map="true"/>
        <check-errors/>
        <set-nonpk-fields map="parameters" value-field="agreementPromoAppl"/>
        <store-value value-field="agreementPromoAppl"/>
        <check-errors/>
    </simple-method>

    <!-- remove an existing AgreementPromoAppl -->
    <simple-method method-name="removeAgreementPromoAppl" short-description="Remove an existing AgreementPromoAppl">
        <entity-one entity-name="AgreementPromoAppl" value-field="agreementPromoAppl" auto-field-map="true"/>
        <check-errors/>
        <remove-value value-field="agreementPromoAppl"/>
        <check-errors/>
    </simple-method>

    <!-- create a new AgreementProductAppl -->
    <simple-method method-name="createAgreementProductAppl" short-description="Create an AgreementProductAppl">
        <make-value value-field="newEntity" entity-name="AgreementProductAppl"/>
        <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <create-value value-field="newEntity"/>
        <check-errors/>
    </simple-method>

    <!-- update an existing AgreementProductAppl -->
    <simple-method method-name="updateAgreementProductAppl" short-description="Update an existing AgreementProductAppl">
        <entity-one entity-name="AgreementProductAppl" value-field="agreementProductAppl" auto-field-map="true"/>
        <check-errors/>
        <set-nonpk-fields map="parameters" value-field="agreementProductAppl"/>
        <store-value value-field="agreementProductAppl"/>
        <check-errors/>
    </simple-method>

    <!-- remove an existing AgreementProductAppl -->
    <simple-method method-name="removeAgreementProductAppl" short-description="Remove an existing AgreementProductAppl">
        <entity-one entity-name="AgreementProductAppl" value-field="agreementProductAppl" auto-field-map="true"/>
        <check-errors/>
        <remove-value value-field="agreementProductAppl"/>
        <check-errors/>
    </simple-method>

    <!-- create a new AgreementPartyApplic -->
    <simple-method method-name="createAgreementPartyApplic" short-description="Create an AgreementPartyApplic">
        <make-value value-field="newEntity" entity-name="AgreementPartyApplic"/>
        <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <create-value value-field="newEntity"/>
        <check-errors/>
    </simple-method>

    <!-- update an existing AgreementPartyApplic -->
    <simple-method method-name="updateAgreementPartyApplic" short-description="Update an existing AgreementPartyApplic">
        <entity-one entity-name="AgreementPartyApplic" value-field="agreementPartyApplic" auto-field-map="true"/>
        <check-errors/>
        <set-nonpk-fields map="parameters" value-field="agreementPartyApplic"/>
        <store-value value-field="agreementPartyApplic"/>
        <check-errors/>
    </simple-method>

    <!-- remove an existing AgreementPartyApplic -->
    <simple-method method-name="removeAgreementPartyApplic" short-description="Remove an existing AgreementPartyApplic">
        <entity-one entity-name="AgreementPartyApplic" value-field="agreementPartyApplic" auto-field-map="true"/>
        <check-errors/>
        <remove-value value-field="agreementPartyApplic"/>
        <check-errors/>
    </simple-method>

    <!-- create a new AgreementGeographicalApplic -->
    <simple-method method-name="createAgreementGeographicalApplic" short-description="Create an AgreementGeographicalApplic">
        <make-value value-field="newEntity" entity-name="AgreementGeographicalApplic"/>
        <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <create-value value-field="newEntity"/>
        <check-errors/>
    </simple-method>

    <!-- update an existing AgreementGeographicalApplic -->
    <simple-method method-name="updateAgreementGeographicalApplic" short-description="Update an existing AgreementGeographicalApplic">
        <entity-one entity-name="AgreementGeographicalApplic" value-field="agreementGeographicalApplic" auto-field-map="true"/>
        <check-errors/>
        <set-nonpk-fields map="parameters" value-field="agreementGeographicalApplic"/>
        <store-value value-field="agreementGeographicalApplic"/>
        <check-errors/>
    </simple-method>

    <!-- remove an existing AgreementGeographicalApplic -->
    <simple-method method-name="removeAgreementGeographicalApplic" short-description="Remove an existing AgreementGeographicalApplic">
        <entity-one entity-name="AgreementGeographicalApplic" value-field="agreementGeographicalApplic" auto-field-map="true"/>
        <check-errors/>
        <remove-value value-field="agreementGeographicalApplic"/>
        <check-errors/>
    </simple-method>

    <!-- Agreement Role -->
    <simple-method method-name="createAgreementRole" short-description="Create an Agreement Role">
        <make-value entity-name="AgreementRole" value-field="newEntity"/>
        <set-pk-fields value-field="newEntity" map="parameters"/>
        <set-nonpk-fields value-field="newEntity" map="parameters"/>
        <create-value value-field="newEntity"/>
    </simple-method>

    <simple-method method-name="updateAgreementRole" short-description="Update an Agreement Role">
        <entity-one entity-name="AgreementRole" value-field="lookedUpValue"/>
        <set-pk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="deleteAgreementRole" short-description="Delete an Agreement Role">
        <entity-one entity-name="AgreementRole" value-field="agreementRole"/>
        <remove-value value-field="agreementRole"/>
    </simple-method>

    <!--AgreementWorkEffortApplic-->
    <simple-method method-name="createAgreementWorkEffortApplic" short-description="Create a link between a WorkEffort and a Agreement Appl">
        <entity-one entity-name="AgreementWorkEffortApplic" value-field="agreementWorkEffortApplic"/>
        <if-not-empty field="agreementWorkEffortApplic">
            <add-error><fail-property resource="AccountingUiLabels" property="AccountingAgreementWorkEffortApplicAlreadyExists"/></add-error>
            <check-errors/>
        <else>
            <make-value value-field="newEntity" entity-name="AgreementWorkEffortApplic"/>
            <set-pk-fields map="parameters" value-field="newEntity"/>
            <create-value value-field="newEntity"/>
        </else>
        </if-not-empty>
    </simple-method>

    <simple-method method-name="deleteAgreementWorkEffortApplic" short-description="Remove a link between a WorkEffort and a Agreement Appl">
        <entity-one entity-name="AgreementWorkEffortApplic" value-field="agreementWorkEffortApplic"/>
        <remove-value value-field="agreementWorkEffortApplic"/>
    </simple-method>

</simple-methods>
